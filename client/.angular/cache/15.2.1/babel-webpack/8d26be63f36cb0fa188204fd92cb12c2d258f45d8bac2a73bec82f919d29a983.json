{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nexport class EmployeePersonalInfoComponent {\n  constructor(route, router, formBuilder, http) {\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.personalInfoForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      middleName: ['', Validators.required],\n      preferredName: ['', Validators.required],\n      email: ['', Validators.required],\n      SSN: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      gender: ['', Validators.required]\n      // middleName: ['', Validators.required],\n      // preferredName: ['', Validators.required],\n      // email: ['', Validators.required],\n      // SSN: ['', Validators.required],\n    });\n  }\n\n  edit() {}\n}\nEmployeePersonalInfoComponent.ɵfac = function EmployeePersonalInfoComponent_Factory(t) {\n  return new (t || EmployeePersonalInfoComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nEmployeePersonalInfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeePersonalInfoComponent,\n  selectors: [[\"app-employee-personal-info\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"firstName\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function EmployeePersonalInfoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\")(2, \"mat-label\");\n      i0.ɵɵtext(3, \"firstName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function EmployeePersonalInfoComponent_Template_button_click_5_listener() {\n        return ctx.edit();\n      });\n      i0.ɵɵtext(6, \"Primary\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.personalInfoForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatButton],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;AAQnE,OAAM,MAAOC,6BAA6B;EACxCC,YACUC,KAAsB,EACtBC,MAAe,EACfC,WAAyB,EACzBC,IAAiB;IAHjB,UAAK,GAALH,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IAEZ,qBAAgB,GAAe,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACtDC,SAAS,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACnCE,UAAU,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ,CAAC;MACrCG,aAAa,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ,CAAC;MACtCI,KAAK,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ,CAAC;MAChCK,GAAG,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MAC9BM,WAAW,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACS,QAAQ,CAAC;MACtCO,MAAM,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACS,QAAQ;MAChC;MACA;MACA;MACA;KACH,CAAC;EAdG;;EAeLQ,IAAI,IAEJ;;AAvBWhB,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;QAA7BA,6BAA6B;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT1CC,+BAAqC;MAElBA,yBAAS;MAAAA,iBAAY;MAChCA,2BAA6C;MACjDA,iBAAiB;MAsCrBA,iCAA2D;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,uBAAO;MAAAA,iBAAS;;;MA1CrEA,gDAA8B","names":["Validators","EmployeePersonalInfoComponent","constructor","route","router","formBuilder","http","group","firstName","required","lastName","middleName","preferredName","email","SSN","dateOfBirth","gender","edit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\doc_vs\\mean-project\\client\\src\\app\\pages\\employee-personal-info\\employee-personal-info.component.ts","D:\\doc_vs\\mean-project\\client\\src\\app\\pages\\employee-personal-info\\employee-personal-info.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-employee-personal-info',\r\n  templateUrl: './employee-personal-info.component.html',\r\n  styleUrls: ['./employee-personal-info.component.css']\r\n})\r\nexport class EmployeePersonalInfoComponent {\r\n  constructor(\r\n    private route : ActivatedRoute,\r\n    private router : Router,\r\n    private formBuilder : FormBuilder,\r\n    private http : HttpClient\r\n    ) {}\r\n    personalInfoForm : FormGroup = this.formBuilder.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    middleName: ['', Validators.required],\r\n    preferredName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      SSN: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      // middleName: ['', Validators.required],\r\n      // preferredName: ['', Validators.required],\r\n      // email: ['', Validators.required],\r\n      // SSN: ['', Validators.required],\r\n  })\r\n  edit(){\r\n    \r\n  }\r\n}\r\n","<form [formGroup]=\"personalInfoForm\">\r\n    <mat-form-field>\r\n        <mat-label>firstName</mat-label>\r\n        <input matInput formControlName=\"firstName\" >\r\n    </mat-form-field>\r\n    \r\n    <!-- <mat-form-field>\r\n        <mat-label>lastName</mat-label>\r\n        <input matInput formControlName=\"lastName\">\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field>\r\n        <mat-label>middleName</mat-label>\r\n        <input matInput formControlName=\"middleName\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>preferredName</mat-label>\r\n        <input matInput formControlName=\"preferredName\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>email</mat-label>\r\n        <input matInput formControlName=\"email\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>SSN</mat-label>\r\n        <input matInput formControlName=\"SSN\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>date of birth</mat-label>\r\n        <input matInput formControlName=\"dateOfBirth\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>gender</mat-label>\r\n        <select matInput formControlName=\"gender\">\r\n            <option name=\"female\">female</option>\r\n            <option name=\"female\">male</option>\r\n            <option name=\"female\">I</option>\r\n            </select>\r\n    </mat-form-field> -->\r\n\r\n</form>\r\n\r\n<button mat-raised-button color=\"primary\" (click)=\"edit()\">Primary</button>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}