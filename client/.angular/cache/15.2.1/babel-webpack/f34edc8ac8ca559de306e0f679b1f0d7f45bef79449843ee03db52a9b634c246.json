{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { HouseAction } from './house.action';\nexport const initialState = {\n  houses: []\n};\nexport const houseReducer = createReducer(initialState, on(HouseAction.getHouses, (state, {\n  houses\n}) => ({\n  ...state,\n  houses: houses\n})), on(HouseAction.addHouse, (state, {\n  house\n}) => ({\n  ...state,\n  houses: [...state.houses, house]\n})), on(HouseAction.updateHouse, (state, {\n  house\n}) => ({\n  ...state,\n  houses: state.houses.map(item => item._id === house._id ? house : item)\n})), on(HouseAction.deleteHouse, (state, {\n  id\n}) => ({\n  ...state,\n  houses: state.houses.filter(house => house._id !== id)\n})));","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,SAASC,WAAW,QAAQ,gBAAgB;AAO5C,OAAO,MAAMC,YAAY,GAAe;EACpCC,MAAM,EAAE;CACX;AAED,OAAO,MAAMC,YAAY,GAAGL,aAAa,CACrCG,YAAY,EACZF,EAAE,CAACC,WAAW,CAACI,SAAS,EAAE,CAACC,KAAK,EAAE;EAAEH;AAAM,CAAE,MAAM;EAC9C,GAAGG,KAAK;EACRH,MAAM,EAAEA;CACX,CAAC,CAAC,EACHH,EAAE,CAACC,WAAW,CAACM,QAAQ,EAAE,CAACD,KAAK,EAAE;EAAEE;AAAK,CAAE,MAAM;EAC5C,GAAGF,KAAK;EACRH,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAM,EAAEK,KAAK;CAClC,CAAC,CAAC,EACHR,EAAE,CAACC,WAAW,CAACQ,WAAW,EAAE,CAACH,KAAK,EAAE;EAAEE;AAAK,CAAE,MAAM;EAC/C,GAAGF,KAAK;EACRH,MAAM,EAAEG,KAAK,CAACH,MAAM,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,KAAK,CAACI,GAAG,GAAGJ,KAAK,GAAGG,IAAI;CACzE,CAAC,CAAC,EACHX,EAAE,CAACC,WAAW,CAACY,WAAW,EAAE,CAACP,KAAK,EAAE;EAAEQ;AAAE,CAAE,MAAM;EAC5C,GAAGR,KAAK;EACRH,MAAM,EAAEG,KAAK,CAACH,MAAM,CAACY,MAAM,CAACP,KAAK,IAAIA,KAAK,CAACI,GAAG,KAAKE,EAAE;CACxD,CAAC,CAAC,CACN","names":["createReducer","on","HouseAction","initialState","houses","houseReducer","getHouses","state","addHouse","house","updateHouse","map","item","_id","deleteHouse","id","filter"],"sourceRoot":"","sources":["D:\\doc_vs\\mean-project\\client\\src\\app\\store\\house\\house.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\r\nimport { HouseAction } from './house.action';\r\nimport { House } from 'src/app/interfaces/house';\r\n\r\nexport interface HouseState {\r\n    houses: House[],\r\n}\r\n\r\nexport const initialState: HouseState = {\r\n    houses: [],\r\n}\r\n\r\nexport const houseReducer = createReducer(\r\n    initialState,\r\n    on(HouseAction.getHouses, (state, { houses }) => ({\r\n        ...state,\r\n        houses: houses\r\n    })),\r\n    on(HouseAction.addHouse, (state, { house }) => ({\r\n        ...state,\r\n        houses: [...state.houses, house]\r\n    })),\r\n    on(HouseAction.updateHouse, (state, { house }) => ({\r\n        ...state,\r\n        houses: state.houses.map(item => item._id === house._id ? house : item)\r\n    })),\r\n    on(HouseAction.deleteHouse, (state, { id }) => ({\r\n        ...state,\r\n        houses: state.houses.filter(house => house._id !== id)\r\n    }))\r\n)\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}