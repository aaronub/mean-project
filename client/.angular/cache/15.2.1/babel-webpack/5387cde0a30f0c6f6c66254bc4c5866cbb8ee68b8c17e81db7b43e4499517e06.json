{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { ReportAction } from './report.action';\nexport const initialState = {\n  reports: []\n};\nexport const reportReducer = createReducer(initialState, on(ReportAction.getReports, (state, {\n  reports\n}) => ({\n  ...state,\n  reports: reports\n})), on(ReportAction.addReport, (state, {\n  report\n}) => ({\n  ...state,\n  reports: [...state.reports, report]\n})), on(ReportAction.updateReport, (state, {\n  report\n}) => ({\n  ...state,\n  reports: state.reports.map(item => item._id === report._id ? report : item)\n})));","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,SAASC,YAAY,QAAQ,iBAAiB;AAO9C,OAAO,MAAMC,YAAY,GAAgB;EACrCC,OAAO,EAAE;CACZ;AAED,OAAO,MAAMC,aAAa,GAAGL,aAAa,CACtCG,YAAY,EACZF,EAAE,CAACC,YAAY,CAACI,UAAU,EAAE,CAACC,KAAK,EAAE;EAAEH;AAAO,CAAE,MAAM;EACjD,GAAGG,KAAK;EACRH,OAAO,EAAEA;CACZ,CAAC,CAAC,EACHH,EAAE,CAACC,YAAY,CAACM,SAAS,EAAE,CAACD,KAAK,EAAE;EAAEE;AAAM,CAAE,MAAM;EAC/C,GAAGF,KAAK;EACRH,OAAO,EAAE,CAAC,GAAGG,KAAK,CAACH,OAAO,EAAEK,MAAM;CACrC,CAAC,CAAC,EACHR,EAAE,CAACC,YAAY,CAACQ,YAAY,EAAE,CAACH,KAAK,EAAE;EAAEE;AAAM,CAAE,MAAM;EAClD,GAAGF,KAAK;EACRH,OAAO,EAAEG,KAAK,CAACH,OAAO,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACI,GAAG,GAAGJ,MAAM,GAAGG,IAAI;CAC7E,CAAC,CAAC,CACN","names":["createReducer","on","ReportAction","initialState","reports","reportReducer","getReports","state","addReport","report","updateReport","map","item","_id"],"sourceRoot":"","sources":["D:\\doc_vs\\mean-project\\client\\src\\app\\store\\report\\report.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\r\nimport { ReportAction } from './report.action';\r\nimport { Report } from '../../interfaces/report';\r\n\r\nexport interface ReportState {\r\n    reports: Report[],\r\n}\r\n\r\nexport const initialState: ReportState = {\r\n    reports: [],\r\n}\r\n\r\nexport const reportReducer = createReducer(\r\n    initialState,\r\n    on(ReportAction.getReports, (state, { reports }) => ({\r\n        ...state,\r\n        reports: reports\r\n    })),\r\n    on(ReportAction.addReport, (state, { report }) => ({\r\n        ...state,\r\n        reports: [...state.reports, report]\r\n    })),\r\n    on(ReportAction.updateReport, (state, { report }) => ({\r\n        ...state,\r\n        reports: state.reports.map(item => item._id === report._id ? report : item)\r\n    })),\r\n)\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}