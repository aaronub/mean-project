{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { EmployeeAction } from 'src/app/store/employee/employee.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/material/snack-bar\";\nexport class LoginComponent {\n  constructor(store, formBuilder, router, http, _snackBar) {\n    this.store = store;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.http = http;\n    this._snackBar = _snackBar;\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    const requestBody = this.loginForm.getRawValue();\n    this.http.post('http://localhost:3000/user/login', requestBody).subscribe({\n      next: data => {\n        console.log('data=', data);\n        localStorage.setItem('JWT_TOKEN', data['jwt']);\n        const employeeInfo = data.user;\n        if (data.user.role === 'employee') {\n          this.store.dispatch(EmployeeAction.setEmployeeInfo({\n            employeeInfo\n          }));\n          if (data.user.status !== 'Approved') {\n            this.router.navigate(['onboard']);\n            return;\n          } else {\n            this.router.navigate(['employeeInfo']);\n            return;\n          }\n        } else {\n          this.router.navigate(['hrHome']);\n          return;\n        }\n      },\n      error: error => {\n        this._snackBar.open('Error', error.error.message, {\n          duration: 3000\n        });\n      },\n      complete: () => {}\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"login-input-container\"], [3, \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"username\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n      i0.ɵɵtext(12, \"password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n}\\r\\n.login-input-container[_ngcontent-%COMP%] {\\r\\n    border: 1px black solid;\\r\\n    border-radius: 10%;\\r\\n    padding: 25px;\\r\\n    margin-top: 200px;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    width: 25%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7QUFDbEI7QUFDQTtJQUNJLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWRjLWZvcm0tZmllbGQge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLmxvZ2luLWlucHV0LWNvbnRhaW5lciB7XHJcbiAgICBib3JkZXI6IDFweCBibGFjayBzb2xpZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwJTtcclxuICAgIHBhZGRpbmc6IDI1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyMDBweDtcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgd2lkdGg6IDI1JTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AAInE,SAASC,cAAc,QAAQ,wCAAwC;;;;;;;AAOvE,OAAM,MAAOC,cAAc;EACzBC,YACUC,KAAY,EACZC,WAAwB,EACxBC,MAAc,EACdC,IAAgB,EAChBC,SAAsB;IAJtB,UAAK,GAALJ,KAAK;IACL,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IACJ,cAAS,GAATC,SAAS;IAGnB,cAAS,GAAc,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC5CC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MAChCE,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ;KACnC,CAAC;EANE;EAQJG,KAAK;IACH,MAAMC,WAAW,GAAG,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE;IAChD,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,kCAAkC,EAAEH,WAAW,CAAC,CAC5DI,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAS,IAAI;QAClBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;QAC1BG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAMK,YAAY,GAAGL,IAAI,CAACM,IAAI;QAC9B,IAAIN,IAAI,CAACM,IAAI,CAACC,IAAI,KAAK,UAAU,EAAE;UACjC,IAAI,CAACxB,KAAK,CAACyB,QAAQ,CAAC5B,cAAc,CAAC6B,eAAe,CAAC;YAAEJ;UAAY,CAAE,CAAC,CAAC;UACrE,IAAIL,IAAI,CAACM,IAAI,CAACI,MAAM,KAAK,UAAU,EAAE;YACnC,IAAI,CAACzB,MAAM,CAAC0B,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;YACjC;WACD,MAAM;YACL,IAAI,CAAC1B,MAAM,CAAC0B,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;YACtC;;SAEH,MAAM;UACL,IAAI,CAAC1B,MAAM,CAAC0B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;UAChC;;MAEJ,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACzB,SAAS,CAAC0B,IAAI,CAAC,OAAO,EAAED,KAAK,CAACA,KAAK,CAACE,OAAO,EAAE;UAChDC,QAAQ,EAAE;SACX,CAAC;MACJ,CAAC;MACDC,QAAQ,EAAE,MAAK,CAAG;KACnB,CAAC;EACN;;AA5CWnC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BC,8BAAmC;MAGZA,wBAAQ;MAAAA,iBAAY;MAC/BA,2BAA2C;MAC/CA,iBAAiB;MAEjBA,yCAAkC;MACnBA,qBAAK;MAAAA,iBAAY;MAC5BA,2BAAwC;MAC5CA,iBAAiB;MAEjBA,0CAAkC;MACnBA,yBAAQ;MAAAA,iBAAY;MAC/BA,4BAA2C;MAC/CA,iBAAiB;MAErBA,kCAA4D;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;;;MAhBpEA,eAAuB;MAAvBA,yCAAuB","names":["Validators","EmployeeAction","LoginComponent","constructor","store","formBuilder","router","http","_snackBar","group","username","required","email","password","login","requestBody","loginForm","getRawValue","post","subscribe","next","data","console","log","localStorage","setItem","employeeInfo","user","role","dispatch","setEmployeeInfo","status","navigate","error","open","message","duration","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\doc_vs\\mean-project\\client\\src\\app\\pages\\login\\login.component.ts","D:\\doc_vs\\mean-project\\client\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { EmployeeAction } from 'src/app/store/employee/employee.action';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  constructor(\r\n    private store: Store,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private _snackBar: MatSnackBar\r\n  ) { }\r\n\r\n  loginForm: FormGroup = this.formBuilder.group({\r\n    username: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n    password: ['', Validators.required]\r\n  })\r\n\r\n  login() {\r\n    const requestBody = this.loginForm.getRawValue()\r\n    this.http.post('http://localhost:3000/user/login', requestBody)\r\n      .subscribe({\r\n        next: (data: any) => {\r\n          console.log('data=', data)\r\n          localStorage.setItem('JWT_TOKEN', data['jwt'])\r\n          const employeeInfo = data.user\r\n          if (data.user.role === 'employee') {\r\n            this.store.dispatch(EmployeeAction.setEmployeeInfo({ employeeInfo }))\r\n            if (data.user.status !== 'Approved') {\r\n              this.router.navigate(['onboard'])\r\n              return\r\n            } else {\r\n              this.router.navigate(['employeeInfo'])\r\n              return\r\n            }\r\n          } else {\r\n            this.router.navigate(['hrHome'])\r\n            return\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this._snackBar.open('Error', error.error.message, {\r\n            duration: 3000\r\n          })\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n}\r\n","<div class=\"login-input-container\">\r\n    <form [formGroup]=\"loginForm\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>username</mat-label>\r\n            <input matInput formControlName=\"username\">\r\n        </mat-form-field>\r\n    \r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>email</mat-label>\r\n            <input matInput formControlName=\"email\">\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>password</mat-label>\r\n            <input matInput formControlName=\"password\">\r\n        </mat-form-field>\r\n    </form>\r\n    <button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}