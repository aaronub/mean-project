{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InterceptorService {\n  intercept(req, next) {\n    if (req.url.includes('/register') || req.url.includes('/login')) {\n      return next.handle(req);\n    }\n    // const TOKEN = localStorage.getItem('token');\n    const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImVtcGxveWVlMSIsImVtYWlsIjoiZW1wbG95ZWUxQGdtYWlsLmNvbSIsInJvbGUiOiJlbXBsb3llZSIsImlhdCI6MTY3ODIyMTI5NiwiZXhwIjoxNjc4MjI4NDk2fQ.MX--ISQ1U2whrnHIUTf2WbrJ0Wc-NmLVr6o5gVupXNQ';\n    const BEARER_TOKEN = `BEARER ${TOKEN}`;\n    return next.handle(req.clone({\n      setHeaders: {\n        Authorization: BEARER_TOKEN\n      }\n    }));\n  }\n  constructor() {}\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)();\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,kBAAkB;EAC7BC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAID,GAAG,CAACE,GAAG,CAACC,QAAQ,CAAC,WAAW,CAAC,IAAIH,GAAG,CAACE,GAAG,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC/D,OAAOF,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;;IAEzB;IACA,MAAMK,KAAK,GAAG,iOAAiO;IAC/O,MAAMC,YAAY,GAAG,UAAUD,KAAK,EAAE;IACtC,OAAOJ,IAAI,CAACG,MAAM,CAACJ,GAAG,CAACO,KAAK,CAAC;MAAEC,UAAU,EAAE;QAAEC,aAAa,EAAEH;MAAY;IAAE,CAAE,CAAC,CAAC;EAChF;EAEAI,eAAgB;;AAXLZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAa,SAAlBb,kBAAkB;EAAAc,YAFjB;AAAM","names":["InterceptorService","intercept","req","next","url","includes","handle","TOKEN","BEARER_TOKEN","clone","setHeaders","Authorization","constructor","factory","providedIn"],"sourceRoot":"","sources":["D:\\doc_vs\\mean-project\\client\\src\\app\\services\\interceptor\\interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.includes('/register') || req.url.includes('/login')) {\r\n      return next.handle(req);\r\n    }\r\n    // const TOKEN = localStorage.getItem('token');\r\n    const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImVtcGxveWVlMSIsImVtYWlsIjoiZW1wbG95ZWUxQGdtYWlsLmNvbSIsInJvbGUiOiJlbXBsb3llZSIsImlhdCI6MTY3ODIyMTI5NiwiZXhwIjoxNjc4MjI4NDk2fQ.MX--ISQ1U2whrnHIUTf2WbrJ0Wc-NmLVr6o5gVupXNQ';\r\n    const BEARER_TOKEN = `BEARER ${TOKEN}`;\r\n    return next.handle(req.clone({ setHeaders: { Authorization: BEARER_TOKEN } }));\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}