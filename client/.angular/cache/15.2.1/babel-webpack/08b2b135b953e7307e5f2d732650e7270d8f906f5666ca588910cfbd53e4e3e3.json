{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { select } from '@ngrx/store';\nimport { selectReportById } from 'src/app/store/report/report.selector';\nimport { CommentDialogComponent } from 'src/app/components/comment-dialog/comment-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/report/report.service\";\nimport * as i4 from \"@ngrx/store\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/list\";\nimport * as i11 from \"@angular/material/icon\";\nfunction EmployeeReportComponent_div_0_mat_list_item_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\")(1, \"span\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 10)(7, \"span\", 4);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-icon\", 11);\n    i0.ɵɵlistener(\"click\", function EmployeeReportComponent_div_0_mat_list_item_18_Template_mat_icon_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const comment_r3 = restoredCtx.$implicit;\n      const report_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.openCommentDialog(report_r1._id, comment_r3._id, comment_r3.description));\n    });\n    i0.ɵɵtext(10, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(11, \"br\")(12, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r3.createdBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, comment_r3.timestamp, \"medium\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", comment_r3.description, \" \");\n  }\n}\nfunction EmployeeReportComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"\\u25CF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 2);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-list\")(8, \"mat-list-item\")(9, \"span\", 3);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\", 4);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(14, \"hr\");\n    i0.ɵɵelementStart(15, \"h3\");\n    i0.ɵɵtext(16, \"Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-list\");\n    i0.ɵɵtemplate(18, EmployeeReportComponent_div_0_mat_list_item_18_Template, 13, 6, \"mat-list-item\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"form\", 6)(20, \"mat-form-field\", 7)(21, \"mat-label\");\n    i0.ɵɵtext(22, \"Leave a comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"textarea\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function EmployeeReportComponent_div_0_Template_button_click_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const report_r1 = restoredCtx.ngIf;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onAddComment(report_r1._id));\n    });\n    i0.ɵɵtext(25, \"Add Comment\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const report_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(report_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(report_r1.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", report_r1.status, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(report_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 10, report_r1.date, \"mediumDate\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", report_r1.comments);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid);\n  }\n}\nexport class EmployeeReportComponent {\n  constructor(dialog, route, reportService, store, formBuilder) {\n    this.dialog = dialog;\n    this.route = route;\n    this.reportService = reportService;\n    this.store = store;\n    this.formBuilder = formBuilder;\n    this.form = this.formBuilder.group({\n      description: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.reportService.getReports();\n    const reportId = this.route.snapshot.paramMap.get('id');\n    this.report$ = this.store.pipe(select(selectReportById(reportId)));\n    // console.log(this.report$)\n  }\n\n  onAddComment(id) {\n    const requestBody = {\n      reportId: id,\n      description: this.form.getRawValue().description\n    };\n    console.log(requestBody);\n    this.reportService.updateReport(requestBody);\n    this.form.reset();\n  }\n  openCommentDialog(reportId, commentId, description) {\n    this.dialog.open(CommentDialogComponent, {\n      data: {\n        reportId,\n        commentId,\n        description\n      }\n    });\n  }\n}\nEmployeeReportComponent.ɵfac = function EmployeeReportComponent_Factory(t) {\n  return new (t || EmployeeReportComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ReportService), i0.ɵɵdirectiveInject(i4.Store), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\nEmployeeReportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeReportComponent,\n  selectors: [[\"app-employee-report\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[\"class\", \"layout\", 4, \"ngIf\"], [1, \"layout\"], [1, \"font-secondary\"], [\"matListItemTitle\", \"\"], [\"matListItemLine\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"description\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [1, \"flex-row\"], [3, \"click\"]],\n  template: function EmployeeReportComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EmployeeReportComponent_div_0_Template, 26, 13, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.report$));\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.NgForOf, i6.NgIf, i7.MatFormField, i7.MatLabel, i8.MatInput, i9.MatButton, i10.MatList, i10.MatListItem, i10.MatListItemLine, i10.MatListItemTitle, i11.MatIcon, i6.AsyncPipe, i6.DatePipe],\n  styles: [\".layout[_ngcontent-%COMP%] {\\r\\n    padding: 3rem;\\r\\n}\\r\\n\\r\\n.Open[_ngcontent-%COMP%] {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.InProgress[_ngcontent-%COMP%] {\\r\\n    color: yellow\\r\\n}\\r\\n\\r\\n.Closed[_ngcontent-%COMP%] {\\r\\n    color: green;\\r\\n}\\r\\n\\r\\n.font-secondary[_ngcontent-%COMP%] {\\r\\n    color: gray;\\r\\n}\\r\\n\\r\\n.flex-row[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    align-items: flex-start;\\r\\n    max-width: 400px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZW1wbG95ZWUtcmVwb3J0L2VtcGxveWVlLXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJO0FBQ0o7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7SUFDOUIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5sYXlvdXQge1xyXG4gICAgcGFkZGluZzogM3JlbTtcclxufVxyXG5cclxuLk9wZW4ge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLkluUHJvZ3Jlc3Mge1xyXG4gICAgY29sb3I6IHllbGxvd1xyXG59XHJcblxyXG4uQ2xvc2VkIHtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLmZvbnQtc2Vjb25kYXJ5IHtcclxuICAgIGNvbG9yOiBncmF5O1xyXG59XHJcblxyXG4uZmxleC1yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAKnE,SAASC,MAAM,QAAe,aAAa;AAC3C,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,SAASC,sBAAsB,QAAQ,4DAA4D;;;;;;;;;;;;;;;;ICI3FC,qCAAuD;IAC5BA,YAAuB;IAAAA,iBAAO;IACrDA,+BAAsB;IAAAA,YAAyC;;IAAAA,iBAAO;IACtEA,+BAAsB;IACIA,YAA0B;IAAAA,iBAAO;IAEvDA,oCAAoF;IAA1EA;MAAA;MAAA;MAAA;MAAA;MAAA,OAASA,8FAA+D;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAW;IAEvGA,sBAAI;IAERA,iBAAgB;;;;IATWA,eAAuB;IAAvBA,0CAAuB;IACxBA,eAAyC;IAAzCA,0EAAyC;IAErCA,eAA0B;IAA1BA,sDAA0B;;;;;;IAjBhEA,8BAAsD;IAC9CA,YAAkB;IAAAA,iBAAK;IAC3BA,4BAAkC;IAAAA,sBAAC;IAAAA,iBAAO;IAAAA,+BAA6B;IAACA,YAAmB;IAAAA,iBAAO;IAClGA,gCAAU;IAEqBA,aAAwB;IAAAA,iBAAO;IACtDA,gCAAsB;IAAAA,aAAuC;;IAAAA,iBAAO;IAG5EA,sBAAI;IAEJA,2BAAI;IAAAA,yBAAQ;IAAAA,iBAAK;IACjBA,iCAAU;IACNA,qGAUgB;IACpBA,iBAAW;IAEXA,gCAAyB;IAELA,gCAAe;IAAAA,iBAAY;IACvCA,+BAA4D;IAChEA,iBAAiB;IAErBA,kCAAuG;IAA5DA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAwB;IAAA,EAAC;IAA0BA,4BAAW;IAAAA,iBAAS;;;;;IA/BvHA,eAAkB;IAAlBA,qCAAkB;IAChBA,eAA2B;IAA3BA,+BAA2B;IAAuCA,eAAmB;IAAnBA,gDAAmB;IAG5DA,eAAwB;IAAxBA,2CAAwB;IACzBA,eAAuC;IAAvCA,0EAAuC;IAO9BA,eAAkB;IAAlBA,4CAAkB;IAanDA,eAAkB;IAAlBA,uCAAkB;IAMsDA,eAAwB;IAAxBA,6CAAwB;;;ADV1G,OAAM,MAAOC,uBAAuB;EAMlCC,YACUC,MAAiB,EACjBC,KAAqB,EACrBC,aAA4B,EAC5BC,KAAY,EACZC,WAAwB;IAJxB,WAAM,GAANJ,MAAM;IACN,UAAK,GAALC,KAAK;IACL,kBAAa,GAAbC,aAAa;IACb,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IATrB,SAAI,GAAc,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MACvCC,WAAW,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACc,QAAQ;KACtC,CAAC;EAQC;EAEHC,QAAQ;IACN,IAAI,CAACN,aAAa,CAACO,UAAU,EAAE;IAC/B,MAAMC,QAAQ,GAAG,IAAI,CAACT,KAAK,CAACU,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAW;IACjE,IAAI,CAACC,OAAO,GAAG,IAAI,CAACX,KAAK,CAACY,IAAI,CAACrB,MAAM,CAACC,gBAAgB,CAACe,QAAQ,CAAC,CAAC,CAAuB;IACxF;EACF;;EAEAM,YAAY,CAACC,EAAU;IACrB,MAAMC,WAAW,GAAG;MAClBR,QAAQ,EAAEO,EAAE;MACZX,WAAW,EAAE,IAAI,CAACa,IAAI,CAACC,WAAW,EAAE,CAACd;KACtC;IACDe,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;IACxB,IAAI,CAAChB,aAAa,CAACqB,YAAY,CAACL,WAAW,CAAC;IAC5C,IAAI,CAACC,IAAI,CAACK,KAAK,EAAE;EACnB;EAEAC,iBAAiB,CAACf,QAAgB,EAAEgB,SAAiB,EAAEpB,WAAmB;IACxE,IAAI,CAACN,MAAM,CAAC2B,IAAI,CAAC/B,sBAAsB,EAAE;MAAEgC,IAAI,EAAE;QAAElB,QAAQ;QAAEgB,SAAS;QAAEpB;MAAW;IAAE,CAAE,CAAC;EAC1F;;AAjCWR,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCtBpCpC,0EAiCM;;;;MAjCeA,wDAAsB","names":["Validators","select","selectReportById","CommentDialogComponent","i0","EmployeeReportComponent","constructor","dialog","route","reportService","store","formBuilder","group","description","required","ngOnInit","getReports","reportId","snapshot","paramMap","get","report$","pipe","onAddComment","id","requestBody","form","getRawValue","console","log","updateReport","reset","openCommentDialog","commentId","open","data","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\doc_vs\\mean-project\\client\\src\\app\\pages\\employee-report\\employee-report.component.ts","D:\\doc_vs\\mean-project\\client\\src\\app\\pages\\employee-report\\employee-report.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Report } from 'src/app/interfaces/report';\r\nimport { ReportService } from 'src/app/services/report/report.service';\r\nimport { Observable } from 'rxjs';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { selectReportById } from 'src/app/store/report/report.selector';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CommentDialogComponent } from 'src/app/components/comment-dialog/comment-dialog.component';\r\n\r\nexport interface CommentDialogData {\r\n  reportId: string,\r\n  commentId: string,\r\n  description: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-employee-report',\r\n  templateUrl: './employee-report.component.html',\r\n  styleUrls: ['./employee-report.component.css']\r\n})\r\nexport class EmployeeReportComponent implements OnInit {\r\n  report$: Observable<Report> | undefined;\r\n  form: FormGroup = this.formBuilder.group({\r\n    description: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private reportService: ReportService,\r\n    private store: Store,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reportService.getReports();\r\n    const reportId = this.route.snapshot.paramMap.get('id') as string;\r\n    this.report$ = this.store.pipe(select(selectReportById(reportId))) as Observable<Report>;\r\n    // console.log(this.report$)\r\n  }\r\n\r\n  onAddComment(id: string): void {\r\n    const requestBody = {\r\n      reportId: id,\r\n      description: this.form.getRawValue().description,\r\n    }\r\n    console.log(requestBody);\r\n    this.reportService.updateReport(requestBody);\r\n    this.form.reset();\r\n  }\r\n\r\n  openCommentDialog(reportId: string, commentId: string, description: string): void {\r\n    this.dialog.open(CommentDialogComponent, { data: { reportId, commentId, description } });\r\n  }\r\n}\r\n","<div class=\"layout\" *ngIf=\"report$ | async as report\">\r\n    <h3>{{ report.title }}</h3>\r\n    <span class='{{ report.status }}'>●</span><span class=\"font-secondary\"> {{ report.status }}</span>\r\n    <mat-list>\r\n        <mat-list-item>\r\n            <span matListItemTitle>{{ report.description }}</span>\r\n            <span matListItemLine>{{ report.date | date : 'mediumDate' }}</span>\r\n        </mat-list-item>\r\n    </mat-list>\r\n    <hr>\r\n\r\n    <h3>Comments</h3>\r\n    <mat-list>\r\n        <mat-list-item *ngFor=\"let comment of report.comments\">\r\n            <span matListItemTitle>{{ comment.createdBy }}</span>\r\n            <span matListItemLine>{{ comment.timestamp | date : 'medium' }}</span>\r\n            <div class=\"flex-row\">\r\n                <span matListItemLine>{{ comment.description }} </span>\r\n                <!-- TODO: add *ngIf comment.username === emplouee.username -->\r\n                <mat-icon (click)=\"openCommentDialog(report._id, comment._id, comment.description)\">edit</mat-icon>\r\n            </div>\r\n            <br>\r\n            <br>\r\n        </mat-list-item>\r\n    </mat-list>\r\n\r\n    <form [formGroup]=\"form\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label >Leave a comment</mat-label>\r\n            <textarea matInput formControlName=\"description\"></textarea>\r\n        </mat-form-field>\r\n    </form>\r\n    <button mat-stroked-button color=\"primary\" (click)=\"onAddComment(report._id)\" [disabled]=\"!form.valid\">Add Comment</button>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}